from pyrogram import Client
from pyrogram.types import Message
from pyrogram.errors import RPCError

command = "unpin"

async def handler(client: Client, message: Message, args: str, settings: dict):
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        chat = await client.get_chat(message.chat.id)
        
        if not chat.pinned_message:
            await message.reply("‚ÑπÔ∏è –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
            return
            
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä–µ–ø–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await client.unpin_all_chat_messages(message.chat.id)
        await message.reply("üìå –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω—ã!")
        
    except RPCError as e:
        if "MESSAGE_ID_INVALID" in str(e):
            # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ ID, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
            try:
                await client.unpin_all_chat_messages(message.chat.id)
                await message.reply("üìå –°–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω—ã (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ unpin_all)!")
            except Exception as e2:
                await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–∏: {str(e2)}")
        else:
            await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
