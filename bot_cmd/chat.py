from pyrogram import Client
from pyrogram.types import Message
from pyrogram.errors import RPCError

commands = ["kik", "add", "pin", "unpin", "del"]

async def handler(client: Client, message: Message, args: str, settings: dict):
    try:
        if not message.text:
            return
            
        cmd = message.text.split()[0].lower().replace(('.l', 'azi', '.tlp')[0], '')
        
        if cmd == "kik":
            await kick_user(client, message)
        elif cmd == "add":
            await add_user(client, message)
        elif cmd == "pin":
            await pin_message(client, message)
        elif cmd == "unpin":
            await unpin_message(client, message)
        elif cmd == "del":
            await delete_message(client, message)
            
    except RPCError as e:
        await message.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

async def get_target_user(client: Client, message: Message):
    # –î–ª—è –∫–æ–º–∞–Ω–¥ —Å reply
    if message.reply_to_message and message.reply_to_message.from_user:
        return message.reply_to_message.from_user
        
    # –î–ª—è –∫–æ–º–∞–Ω–¥ —Å @username
    if len(message.text.split()) > 1:
        username = message.text.split()[1].strip('@')
        try:
            return await client.get_users(username)
        except:
            return None
    return None

async def kick_user(client: Client, message: Message):
    if not message.chat.type in ["group", "supergroup"]:
        await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø!")
        return

    user = await get_target_user(client, message)
    if not user:
        await message.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    try:
        await client.ban_chat_member(message.chat.id, user.id)
        await message.reply(f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} –∏—Å–∫–ª—é—á–µ–Ω!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å: {str(e)}")

async def add_user(client: Client, message: Message):
    if not message.chat.type in ["group", "supergroup"]:
        await message.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø!")
        return

    user = await get_target_user(client, message)
    if not user:
        await message.reply("‚ùå –£–∫–∞–∂–∏—Ç–µ @username –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        return

    try:
        await client.unban_chat_member(message.chat.id, user.id)
        await message.reply(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.first_name} –¥–æ–±–∞–≤–ª–µ–Ω!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å: {str(e)}")

async def pin_message(client: Client, message: Message):
    if not message.reply_to_message:
        await message.reply("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è")
        return

    try:
        await client.pin_chat_message(
            message.chat.id,
            message.reply_to_message.id,
            disable_notification=True
        )
        await message.reply("üìå –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å: {str(e)}")

async def unpin_message(client: Client, message: Message):
    try:
        await client.unpin_chat_message(message.chat.id)
        await message.reply("üìå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å: {str(e)}")

async def delete_message(client: Client, message: Message):
    if not message.reply_to_message:
        await message.reply("‚ùå –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
        return

    try:
        await client.delete_messages(
            message.chat.id,
            message.reply_to_message.id
        )
        await message.reply("üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!")
    except Exception as e:
        await message.reply(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: {str(e)}")
